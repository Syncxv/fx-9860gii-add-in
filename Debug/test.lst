SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 09-Oct-2021 18:46:29  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\USER\Documents\CASIO\fx-9860G SDK\test\test.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          test.c     1    /*****************************************************************/
          test.c     2    /*                                                               */
          test.c     3    /*   CASIO fx-9860G SDK Library                                  */
          test.c     4    /*                                                               */
          test.c     5    /*   File name : [ProjectName].c                                 */
          test.c     6    /*                                                               */
          test.c     7    /*   Copyright (c) 2006 CASIO COMPUTER CO., LTD.                 */
          test.c     8    /*                                                               */
          test.c     9    /*****************************************************************/
          test.c    10    #include "fxlib.h"
          test.c    11    #include "stdio.h"
          test.c    12    #include "stdlib.h"
          test.c    13    #include "MonochromeLib.h"
          test.c    14    #include "syscall.h"
          test.c    15    #include <math.h>
          test.c    16    
          test.c    17    //****************************************************************************
          test.c    18    //  AddIn_main (Sample program main function)
          test.c    19    //
          test.c    20    //  param   :   isAppli   : 1 = This application is launched by MAIN MENU.
          test.c    21    //                        : 0 = This application is launched by a strip in eACT application.
          test.c    22    //
          test.c    23    //              OptionNum : Strip number (0~3)
          test.c    24    //                         (This parameter is only used when isAppli parameter is 0.)
          test.c    25    //
          test.c    26    //  retval  :   1 = No error / 0 = Error
          test.c    27    //
          test.c    28    //****************************************************************************
          test.c    29    int AddIn_main(int isAppli, unsigned short OptionNum)
P   00000000              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=4
          test.c    30    {
          test.c    31        unsigned int key;
          test.c    32        int active = 0;
          test.c    33        Bdisp_AllClr_DDVRAM();
    00000000 D31A                   MOV.L       L447+10,R3 ; _Bdisp_AllClr_DDVRAM
    00000002 7FFC                   ADD         #-4,R15
    00000004 EC00                   MOV         #0,R12
    00000006 430B                   JSR         @R3
    00000008 6DC3                   MOV         R12,R13
    0000000A 982A                   MOV.W       L447,R8    ; H'753C
    0000000C 992A                   MOV.W       L447+2,R9  ; H'01F4
    0000000E 9A2A                   MOV.W       L447+4,R10 ; H'7532
    00000010 DE17                   MOV.L       L447+14,R14; _IsKeyDown
          test.c    34        while (IsKeyDown(KEY_CTRL_EXIT) == 0) {
    00000012 A01D                   BRA         L437
    00000014 EB01                   MOV         #1,R11
    00000016              L438:                             
          test.c    35            if(IsKeyDown(KEY_CTRL_F3)) {
    00000016 9427                   MOV.W       L447+6,R4  ; H'753B
    00000018 4E0B                   JSR         @R14
    0000001A 0009                   NOP
    0000001C 2008                   TST         R0,R0
    0000001E 8901                   BT          L439




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 09-Oct-2021 18:46:29  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          test.c    36                active = 1;
    00000020 A005                   BRA         L440
    00000022 6DB3                   MOV         R11,R13
    00000024              L439:                             
          test.c    37            } else if(IsKeyDown(KEY_CTRL_F4)) {
    00000024 4E0B                   JSR         @R14
    00000026 6483                   MOV         R8,R4
    00000028 2008                   TST         R0,R0
    0000002A 8900                   BT          L440
          test.c    38                active = 0;
    0000002C 6DC3                   MOV         R12,R13
    0000002E              L440:                             
          test.c    39            }
          test.c    40            if(active) {
    0000002E 2DD8                   TST         R13,R13
    00000030 8905                   BT          L442
          test.c    41                // locate(1,1);
          test.c    42                // Print((unsigned char*)"<distance/speed|time>");
          test.c    43                // PrintXY(1,2,"soh,cah,toa;PIr^2", 1);
          test.c    44                PrintXY(1,2,"some formulas eh", 1);
    00000032 E701                   MOV         #1,R7
    00000034 D60F                   MOV.L       L447+18,R6 ; L429
    00000036 E502                   MOV         #2,R5
    00000038 D30F                   MOV.L       L447+22,R3 ; _PrintXY
    0000003A 430B                   JSR         @R3
    0000003C 6473                   MOV         R7,R4
    0000003E              L442:                             
          test.c    45            }
          test.c    46            ML_display_vram();
    0000003E D20F                   MOV.L       L447+26,R2 ; _ML_display_vram
    00000040 420B                   JSR         @R2
    00000042 0009                   NOP
          test.c    47            ML_clear_vram();
    00000044 D30E                   MOV.L       L447+30,R3 ; _ML_clear_vram
    00000046 430B                   JSR         @R3
    00000048 0009                   NOP
          test.c    48            Sleep(500);
    0000004A D20E                   MOV.L       L447+34,R2 ; _Sleep
    0000004C 420B                   JSR         @R2
    0000004E 6493                   MOV         R9,R4
    00000050              L437:                             
    00000050 4E0B                   JSR         @R14
    00000052 64A3                   MOV         R10,R4
    00000054 2008                   TST         R0,R0
    00000056 89DE                   BT          L438
    00000058 DE0B                   MOV.L       L447+38,R14; _GetKey
          test.c    49        }
          test.c    50        while(1){
    0000005A              L444:                             
          test.c    51            GetKey(&key);
    0000005A 4E0B                   JSR         @R14
    0000005C 64F3                   MOV         R15,R4
    0000005E AFFC                   BRA         L444
    00000060 0009                   NOP
    00000062              L447:                             
    00000062 753C                   .DATA.W     H'753C
    00000064 01F4                   .DATA.W     H'01F4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 09-Oct-2021 18:46:29  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000066 7532                   .DATA.W     H'7532
    00000068 753B                   .DATA.W     H'753B
    0000006A 0000                   .DATA.W     0
    0000006C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000070 <00000000>             .DATA.L     _IsKeyDown
    00000074 <00000000>             .DATA.L     L429
    00000078 <00000000>             .DATA.L     _PrintXY
    0000007C <00000000>             .DATA.L     _ML_display_vram
    00000080 <00000000>             .DATA.L     _ML_clear_vram
    00000084 <00000000>             .DATA.L     _Sleep
    00000088 <00000000>             .DATA.L     _GetKey
          test.c    52        }
          test.c    53        return 1;
          test.c    54       
          test.c    55        // Bdisp_AllClr_DDVRAM();
          test.c    56        // Bdisp_DrawLineVRAM(0,0,20,0);    
          test.c    57        // // locate(1,1);
          test.c    58        // // Print((unsigned char*)"<distance/speed|time>");
          test.c    59        // // locate(1,2);
          test.c    60        // // Print((unsigned char*)"soh,cah,toa");
          test.c    61    
          test.c    62        
          test.c    63    
          test.c    64        // return 1;
          test.c    65    }
          test.c    66    
          test.c    67    
          test.c    68    
          test.c    69    
          test.c    70    //****************************************************************************
          test.c    71    //**************                                              ****************
          test.c    72    //**************                 Notice!                      ****************
          test.c    73    //**************                                              ****************
          test.c    74    //**************  Please do not change the following source.  ****************
          test.c    75    //**************                                              ****************
          test.c    76    //****************************************************************************
          test.c    77    
          test.c    78    
          test.c    79    #pragma section _BR_Size
          test.c    80    unsigned long BR_Size;
          test.c    81    #pragma section
          test.c    82    
          test.c    83    
          test.c    84    #pragma section _TOP
          test.c    85    
          test.c    86    //****************************************************************************
          test.c    87    //  InitializeSystem
          test.c    88    //
          test.c    89    //  param   :   isAppli   : 1 = Application / 0 = eActivity
          test.c    90    //              OptionNum : Option Number (only eActivity)
          test.c    91    //
          test.c    92    //  retval  :   1 = No error / 0 = Error
          test.c    93    //
          test.c    94    //****************************************************************************
          test.c    95    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 09-Oct-2021 18:46:29  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          test.c    96    {
          test.c    97        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L448+2,R3  ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L448:                             
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
          test.c    98    }
          test.c    99    
          test.c   100    #pragma section
          test.c   101    
C   00000000              L429:
    00000000 736F6D6520             .SDATA      "some formulas eh"
             666F726D75   
             6C61732065   
             68           
    00000010 00                     .DATA.B     H'00
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1









































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 09-Oct-2021 18:46:29  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         1




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      101



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               0000008C Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               00000011 Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000000AD Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            8
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           3
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            20






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\USER\AppData\Local\Temp\hmk7445.tmp 

