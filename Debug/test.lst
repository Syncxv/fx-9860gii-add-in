SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 09-Oct-2021 21:55:40  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\USER\Documents\CASIO\fx-9860G SDK\test\test.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          test.c     1    /*****************************************************************/
          test.c     2    /*                                                               */
          test.c     3    /*   CASIO fx-9860G SDK Library                                  */
          test.c     4    /*                                                               */
          test.c     5    /*   File name : [ProjectName].c                                 */
          test.c     6    /*                                                               */
          test.c     7    /*   Copyright (c) 2006 CASIO COMPUTER CO., LTD.                 */
          test.c     8    /*                                                               */
          test.c     9    /*****************************************************************/
          test.c    10    #include "fxlib.h"
          test.c    11    #include "stdio.h"
          test.c    12    #include "stdlib.h"
          test.c    13    #include "MonochromeLib.h"
          test.c    14    #include "syscall.h"
          test.c    15    #include <math.h>
          test.c    16    
          test.c    17    //****************************************************************************
          test.c    18    //  AddIn_main (Sample program main function)
          test.c    19    //
          test.c    20    //  param   :   isAppli   : 1 = This application is launched by MAIN MENU.
          test.c    21    //                        : 0 = This application is launched by a strip in eACT application.
          test.c    22    //
          test.c    23    //              OptionNum : Strip number (0~3)
          test.c    24    //                         (This parameter is only used when isAppli parameter is 0.)
          test.c    25    //
          test.c    26    //  retval  :   1 = No error / 0 = Error
          test.c    27    //
          test.c    28    //****************************************************************************
          test.c    29    int AddIn_main(int isAppli, unsigned short OptionNum)
P   00000000              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=4
          test.c    30    {
          test.c    31        unsigned int key;
          test.c    32        int active = 0;
          test.c    33        Bdisp_AllClr_DDVRAM();
    00000000 D32E                   MOV.L       L466+8,R3  ; _Bdisp_AllClr_DDVRAM
    00000002 7FFC                   ADD         #-4,R15
    00000004 EA00                   MOV         #0,R10
    00000006 430B                   JSR         @R3
    00000008 6BA3                   MOV         R10,R11
    0000000A 9853                   MOV.W       L466,R8    ; H'7532
    0000000C DC2C                   MOV.L       L466+12,R12; _IsKeyDown
    0000000E DD2D                   MOV.L       L466+16,R13; _Print
    00000010 DE2D                   MOV.L       L466+20,R14; _locate
          test.c    34        while (IsKeyDown(KEY_CTRL_EXIT) == 0) {
    00000012 A043                   BRA         L455
    00000014 E901                   MOV         #1,R9
    00000016              L456:                             
          test.c    35            if(IsKeyDown(KEY_CTRL_F3)) {
    00000016 944E                   MOV.W       L466+2,R4  ; H'753B
    00000018 4C0B                   JSR         @R12
    0000001A 0009                   NOP
    0000001C 2008                   TST         R0,R0
    0000001E 8901                   BT          L457




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 09-Oct-2021 21:55:40  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          test.c    36                active = 1;
    00000020 A006                   BRA         L458
    00000022 6B93                   MOV         R9,R11
    00000024              L457:                             
          test.c    37            } else if(IsKeyDown(KEY_CTRL_F4)) {
    00000024 9448                   MOV.W       L466+4,R4  ; H'753C
    00000026 4C0B                   JSR         @R12
    00000028 0009                   NOP
    0000002A 2008                   TST         R0,R0
    0000002C 8900                   BT          L458
          test.c    38                active = 0;
    0000002E 6BA3                   MOV         R10,R11
    00000030              L458:                             
          test.c    39            }
          test.c    40            if(active) {
    00000030 2BB8                   TST         R11,R11
    00000032 8929                   BT          L460
          test.c    41                locate(1,1);
    00000034 E501                   MOV         #1,R5
    00000036 4E0B                   JSR         @R14
    00000038 6453                   MOV         R5,R4
          test.c    42                Print((unsigned char*)"<distance/speed|time>");
    0000003A D424                   MOV.L       L466+24,R4 ; L429
    0000003C 4D0B                   JSR         @R13
    0000003E 0009                   NOP
          test.c    43                locate(1,2);
    00000040 E502                   MOV         #2,R5
    00000042 4E0B                   JSR         @R14
    00000044 E401                   MOV         #1,R4
          test.c    44                Print((unsigned char*)"a^2+b^2=c^2 pythagoras");
    00000046 D422                   MOV.L       L466+28,R4 ; L430
    00000048 4D0B                   JSR         @R13
    0000004A 0009                   NOP
          test.c    45                locate(1,3);
    0000004C E503                   MOV         #3,R5
    0000004E 4E0B                   JSR         @R14
    00000050 E401                   MOV         #1,R4
          test.c    46                Print((unsigned char*)"soh,cah,toa");
    00000052 D420                   MOV.L       L466+32,R4 ; L431
    00000054 4D0B                   JSR         @R13
    00000056 0009                   NOP
          test.c    47                locate(1,4);
    00000058 E504                   MOV         #4,R5
    0000005A 4E0B                   JSR         @R14
    0000005C E401                   MOV         #1,R4
          test.c    48                Print((unsigned char*)"QUAD: ax^2+bx+c=0");
    0000005E D41E                   MOV.L       L466+36,R4 ; L432
    00000060 4D0B                   JSR         @R13
    00000062 0009                   NOP
          test.c    49                locate(1,5);
    00000064 E505                   MOV         #5,R5
    00000066 4E0B                   JSR         @R14
    00000068 E401                   MOV         #1,R4
          test.c    50                Print((unsigned char*)"QU:x=-b+-sqr(b^2-4ac)/2a");
    0000006A D41C                   MOV.L       L466+40,R4 ; L433
    0000006C 4D0B                   JSR         @R13
    0000006E 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 09-Oct-2021 21:55:40  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          test.c    51                locate(1,6);
    00000070 E506                   MOV         #6,R5
    00000072 4E0B                   JSR         @R14
    00000074 E401                   MOV         #1,R4
          test.c    52                Print((unsigned char*)"Vol Cylinder: PIr^2h");
    00000076 D41A                   MOV.L       L466+44,R4 ; L434
    00000078 4D0B                   JSR         @R13
    0000007A 0009                   NOP
          test.c    53                locate(1,7);
    0000007C E507                   MOV         #7,R5
    0000007E 4E0B                   JSR         @R14
    00000080 E401                   MOV         #1,R4
          test.c    54                Print((unsigned char*)"Area Parrelelorgram: bxh");
    00000082 D418                   MOV.L       L466+48,R4 ; L435
    00000084 4D0B                   JSR         @R13
    00000086 0009                   NOP
    00000088              L460:                             
          test.c    55                // PrintXY(1,2,"soh,cah,toa;PIr^2", 1);
          test.c    56            }
          test.c    57            ML_display_vram();
    00000088 D317                   MOV.L       L466+52,R3 ; _ML_display_vram
    0000008A 430B                   JSR         @R3
    0000008C 0009                   NOP
          test.c    58            ML_clear_vram();
    0000008E D217                   MOV.L       L466+56,R2 ; _ML_clear_vram
    00000090 420B                   JSR         @R2
    00000092 0009                   NOP
          test.c    59            Sleep(500);
    00000094 9411                   MOV.W       L466+6,R4  ; H'01F4
    00000096 D316                   MOV.L       L466+60,R3 ; _Sleep
    00000098 430B                   JSR         @R3
    0000009A 0009                   NOP
    0000009C              L455:                             
    0000009C 4C0B                   JSR         @R12
    0000009E 6483                   MOV         R8,R4
    000000A0 2008                   TST         R0,R0
    000000A2 89B8                   BT          L456
    000000A4 DE13                   MOV.L       L466+64,R14; _GetKey
          test.c    60        }
          test.c    61        while(1){
    000000A6              L462:                             
          test.c    62            GetKey(&key);
    000000A6 4E0B                   JSR         @R14
    000000A8 64F3                   MOV         R15,R4
    000000AA AFFC                   BRA         L462
    000000AC 0009                   NOP
          test.c    63        }
          test.c    64        return 1;
          test.c    65       
          test.c    66        // Bdisp_AllClr_DDVRAM();
          test.c    67        // Bdisp_DrawLineVRAM(0,0,20,0);    
          test.c    68        // // locate(1,1);
          test.c    69        // // Print((unsigned char*)"<distance/speed|time>");
          test.c    70        // // locate(1,2);
          test.c    71        // // Print((unsigned char*)"soh,cah,toa");
          test.c    72    
          test.c    73        




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 09-Oct-2021 21:55:40  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          test.c    74    
          test.c    75        // return 1;
          test.c    76    }
          test.c    77    
          test.c    78    void thing(int type)
    000000AE              _thing:                          ; function: thing
                                                           ; frame size=0
          test.c    79    {
          test.c    80        switch (type)
    000000AE 6043                   MOV         R4,R0
          test.c    81        {
          test.c    82        case 0:
          test.c    83            // formulas and sheet
          test.c    84    
          test.c    85            break;
          test.c    86        
          test.c    87        default:
          test.c    88            break;
          test.c    89        }
          test.c    90    }
    000000B0 000B                   RTS
    000000B2 8800                   CMP/EQ      #0,R0
    000000B4              L466:                             
    000000B4 7532                   .DATA.W     H'7532
    000000B6 753B                   .DATA.W     H'753B
    000000B8 753C                   .DATA.W     H'753C
    000000BA 01F4                   .DATA.W     H'01F4
    000000BC <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000000C0 <00000000>             .DATA.L     _IsKeyDown
    000000C4 <00000000>             .DATA.L     _Print
    000000C8 <00000000>             .DATA.L     _locate
    000000CC <00000000>             .DATA.L     L429
    000000D0 <00000000>             .DATA.L     L430
    000000D4 <00000000>             .DATA.L     L431
    000000D8 <00000000>             .DATA.L     L432
    000000DC <00000000>             .DATA.L     L433
    000000E0 <00000000>             .DATA.L     L434
    000000E4 <00000000>             .DATA.L     L435
    000000E8 <00000000>             .DATA.L     _ML_display_vram
    000000EC <00000000>             .DATA.L     _ML_clear_vram
    000000F0 <00000000>             .DATA.L     _Sleep
    000000F4 <00000000>             .DATA.L     _GetKey
          test.c    91    
          test.c    92    
          test.c    93    //****************************************************************************
          test.c    94    //**************                                              ****************
          test.c    95    //**************                 Notice!                      ****************
          test.c    96    //**************                                              ****************
          test.c    97    //**************  Please do not change the following source.  ****************
          test.c    98    //**************                                              ****************
          test.c    99    //****************************************************************************
          test.c   100    
          test.c   101    
          test.c   102    #pragma section _BR_Size
          test.c   103    unsigned long BR_Size;
          test.c   104    #pragma section
          test.c   105    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 09-Oct-2021 21:55:40  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          test.c   106    
          test.c   107    #pragma section _TOP
          test.c   108    
          test.c   109    //****************************************************************************
          test.c   110    //  InitializeSystem
          test.c   111    //
          test.c   112    //  param   :   isAppli   : 1 = Application / 0 = eActivity
          test.c   113    //              OptionNum : Option Number (only eActivity)
          test.c   114    //
          test.c   115    //  retval  :   1 = No error / 0 = Error
          test.c   116    //
          test.c   117    //****************************************************************************
          test.c   118    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
          test.c   119    {
          test.c   120        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L467+2,R3  ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L467:                             
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
          test.c   121    }
          test.c   122    
          test.c   123    #pragma section
          test.c   124    
C   00000000              L429:
    00000000 3C64697374             .SDATA      "<distance/speed|time>"
             616E63652F   
             7370656564   
             7C74696D65   
             3E           
    00000015 00                     .DATA.B     H'00
    00000016 00000002               .RES.W      1
    00000018              L430:
    00000018 615E322B62             .SDATA      "a^2+b^2=c^2 pythagoras"
             5E323D635E   
             3220707974   
             6861676F72   
             6173         
    0000002E 00                     .DATA.B     H'00
    0000002F 00000001               .RES.B      1
    00000030              L431:
    00000030 736F682C63             .SDATA      "soh,cah,toa"
             61682C746F   
             61           
    0000003B 00                     .DATA.B     H'00
    0000003C              L432:
    0000003C 515541443A             .SDATA      "QUAD: ax^2+bx+c=0"
             2061785E32   
             2B62782B63   
             3D30         
    0000004D 00                     .DATA.B     H'00
    0000004E 00000002               .RES.W      1
    00000050              L433:
    00000050 51553A783D             .SDATA      "QU:x=-b+-sqr(b^2-4ac)/2a"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 09-Oct-2021 21:55:40  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             2D622B2D73   
             717228625E   
             322D346163   
             292F3261     
    00000068 00                     .DATA.B     H'00
    00000069 00000001               .RES.B      1
    0000006A 00000002               .RES.W      1
    0000006C              L434:
    0000006C 566F6C2043             .SDATA      "Vol Cylinder: PIr^2h"
             796C696E64   
             65723A2050   
             49725E3268   
    00000080 00                     .DATA.B     H'00
    00000081 00000001               .RES.B      1
    00000082 00000002               .RES.W      1
    00000084              L435:
    00000084 4172656120             .SDATA      "Area Parrelelorgram: bxh"
             5061727265   
             6C656C6F72   
             6772616D3A   
             20627868     
    0000009C 00                     .DATA.B     H'00
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1





































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 09-Oct-2021 21:55:40  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      124



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000000F8 Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               0000009D Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000001A5 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            9
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           4
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            28






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\USER\AppData\Local\Temp\hmkACEF.tmp 

